@using DemoWebApp.Tests
@using Newtonsoft.Json

@{
    ViewBag.Title = "Home Page";

    // Read file and parse it
    string todayJson = File.ReadAllText(@"C:\Users\Public\TestFolder\Today.json");
    Dictionary<string, List<Plan>> todayPlans = JsonConvert.DeserializeObject<Dictionary<string, List<Plan>>>(todayJson);

    string yesterdayJson = File.ReadAllText(@"C:\Users\Public\TestFolder\Yesterday.json");
    Dictionary<string, List<Plan>> yesterdayPlans = JsonConvert.DeserializeObject<Dictionary<string, List<Plan>>>(yesterdayJson);
}

<div class="row">
    
    <h1>Plans</h1>
    @foreach (var province in todayPlans)
    {
        var oldPlans = yesterdayPlans[province.Key];

        <h3>@province.Key</h3>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Yesterday Package Name</th>
                    <th>Price</th>
                    <th>Province</th>
                    <th>Date</th>

                    <th>Today Package Name</th>
                    <th>Price</th>
                    <th>Province</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
            
            @foreach (var plan in province.Value)
            {
                // Get the Yesterday Plan where the package name matches the Today's Plan packageme name
                var yesterdayPlan = oldPlans.FirstOrDefault(p => p.PackageName == plan.PackageName);
                if (yesterdayPlan != null)
                {
                    yesterdayPlan.IsProcessed = true;
                    <tr @if(yesterdayPlan.Price != plan.Price) {<text>style="background-color:lightcoral"</text>}>
                        <td>@yesterdayPlan.PackageName</td>
                        <td>@yesterdayPlan.Price</td>
                        <td>@yesterdayPlan.Province</td>
                        <td>@yesterdayPlan.CreatedAt.ToString("MMM dd, yyyy. HH:mm:ss")</td>

                        <td>@plan.PackageName</td>
                        <td>@plan.Price</td>
                        <td>@plan.Province</td>
                        <td>@plan.CreatedAt.ToString("MMM dd, yyyy. HH:mm:ss")</td>
                    </tr>
                }
                else
                {
                    // Mark New Plans
                    plan.IsNew = true;
                }
            }
            
            </tbody>
        </table>
    }


    @foreach (var province in todayPlans)
    {
        <h3>Get the New Plans (Marked "IsNew")</h3>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Package Name</th>
                    <th>Price</th>
                    <th>Province</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var plan in province.Value.Where(p => p.IsNew))
            {
                <tr>
                   <td>@plan.PackageName</td>
                   <td>@plan.Price</td>
                   <td>@plan.Province</td>
                   <td>@plan.CreatedAt.ToString("MMM dd, yyyy. HH:mm:ss")</td>
                </tr>
            }
            </tbody>
        </table>
    }
                    
    @foreach (var province in yesterdayPlans)
    {
        <h3>Get the Discontinued Plans (Marked Not Processed)</h3>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Package Name</th>
                    <th>Price</th>
                    <th>Province</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var plan in province.Value.Where(p => !p.IsProcessed))
            {
                <tr>
                   <td>@plan.PackageName</td>
                   <td>@plan.Price</td>
                   <td>@plan.Province</td>
                   <td>@plan.CreatedAt.ToString("MMM dd, yyyy. HH:mm:ss")</td>
                </tr>
            }
            </tbody>
        </table>
    }
</div>
